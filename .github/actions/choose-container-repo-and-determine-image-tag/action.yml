name: "Output the container repository and image tag to be used"
description: "Container repository is inputs.registry/inputs.container-image-release, if current branch is main or tag.
  Otherwise, it will be inputs.registry/inputs.container-image-dev.
  Image tag is latest if branch is main, otherwise it is the tag or branch name with slashes replaced by hyphens."

inputs:
  registry:
    description: "Registry where to push container image"
    required: true
  container-image-release:
    description: "The name of the container image used for release"
    required: true
  container-image-dev:
    description: "The name of the container image used for development"
    required: true

outputs:
  container-repo:
    description: "Container repository to be used."
    value: ${{ steps.choose-repo.outputs.container-repo }}
  image-tag:
    description: "Image tag to be used."
    value: ${{ steps.craft-image-tag.outputs.image-tag }}

runs:
  using: "composite"
  steps:
    - name: Output container repository
      id: choose-repo
      shell: bash
      run: |
        if [ -z '${{ inputs.registry }}' ]; then
          echo 'inputs.registry should not be empty! Set it before calling this action' 1>&2

          exit 1
        fi

        if [[ -z '${{ inputs.container-image-release}}' || -z '${inputs.container-image-dev}' ]]; then
          echo 'inputs.container-image-release("${{ inputs.container-image-release}}") and inputs.container-image-dev ("${{ inputs.container-image-dev }}") should not be empty! Set them before calling this action' 1>&2

          exit 1
        fi

        if [[ ${{ github.ref }} == 'refs/heads/main' || ${{ github.ref }} == 'refs/tags/v'* ]]; then
          container_image='${{ inputs.container-image-release}}'
        else
          container_image='${{ inputs.container-image-dev }}'
        fi

        container_repo=${{ inputs.registry }}/${container_image}
        echo "::set-output name=container-repo::${container_repo}"
    - name: Output image tag
      id: craft-image-tag
      shell: bash
      run: |
        # GITHUB_HEAD_REF is set only when workflow is related to a PR.
        # So, in case of push to main or a tag, we need to use GITHUB_REF_NAME.
        if [ -z "${GITHUB_HEAD_REF}" ]; then
          ref=$GITHUB_REF_NAME
        else
          ref=$GITHUB_HEAD_REF
        fi

        # If ref is 'foo/bar', image_tag will be 'foo-bar', we need this because
        # it is forbidden to have slash in image tag.
        image_tag=${ref/\//-}
        if [ "$image_tag" = "main" ]; then
            image_tag="latest"
        fi

        echo "::set-output name=image-tag::${image_tag}"
